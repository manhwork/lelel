<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Command Injection Lab</title>
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    <div class="container">
        <header>
            <a href="/" class="back-link">‚Üê Quay l·∫°i</a>
            <h1>üåê Command Injection Lab</h1>
            <p class="subtitle">Th·ª±c h√†nh k·ªπ thu·∫≠t t·∫•n c√¥ng Command Injection</p>
        </header>

        <main class="lab-content">
            <div class="info-box">
                <h3>üìã M·ª•c ti√™u</h3>
                <ul>
                    <li>Ping ƒë·∫øn ƒë·ªãa ch·ªâ IP ho·∫∑c domain</li>
                    <li>Ph√°t hi·ªán l·ªó h·ªïng Command Injection</li>
                    <li>Khai th√°c ƒë·ªÉ th·ª±c thi l·ªánh h·ªá th·ªëng</li>
                    <li>ƒê·ªçc file b√≠ m·∫≠t tr√™n server</li>
                </ul>
            </div>

            <div class="search-section">
                <h2>Ping Network Tool</h2>
                <p style="color: #666; margin-bottom: 15px;">Nh·∫≠p ƒë·ªãa ch·ªâ IP ho·∫∑c domain ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi m·∫°ng</p>
                <div class="search-box">
                    <input type="text" id="ipInput" placeholder="V√≠ d·ª•: 8.8.8.8 ho·∫∑c google.com" />
                    <button id="pingBtn">üîç Ping</button>
                </div>
            </div>

            <div id="commandDisplay" class="query-display" style="display: none;">
                <strong>Command th·ª±c thi:</strong>
                <code id="commandText"></code>
            </div>

            <div id="results" class="results-section">
                <!-- K·∫øt qu·∫£ s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y -->
            </div>

            <div class="hints-box">
                <h3>üí° G·ª£i √Ω</h3>
                <details>
                    <summary>G·ª£i √Ω 1: Command Chaining</summary>
                    <p>Trong Linux/Unix, b·∫°n c√≥ th·ªÉ n·ªëi nhi·ªÅu l·ªánh b·∫±ng c√°c k√Ω t·ª± nh∆∞ <code>;</code>, <code>&&</code>,
                        <code>||</code>, ho·∫∑c <code>|</code></p>
                </details>
                <details>
                    <summary>G·ª£i √Ω 2: Th·ª±c thi l·ªánh b·ªï sung</summary>
                    <p>Th·ª≠: <code>8.8.8.8; ls -la</code> ƒë·ªÉ li·ªát k√™ file trong th∆∞ m·ª•c hi·ªán t·∫°i</p>
                </details>
                <details>
                    <summary>G·ª£i √Ω 3: ƒê·ªçc file h·ªá th·ªëng</summary>
                    <p>Th·ª≠: <code>8.8.8.8; cat /etc/passwd</code> ho·∫∑c <code>8.8.8.8 && whoami</code></p>
                </details>
                <details>
                    <summary>G·ª£i √Ω 4: ƒê·ªçc file b√≠ m·∫≠t</summary>
                    <p>C√≥ m·ªôt file <code>secret.txt</code> trong th∆∞ m·ª•c d·ª± √°n. Th·ª≠:
                        <code>8.8.8.8; cat secret.txt</code></p>
                </details>
                <details>
                    <summary>G·ª£i √Ω 5: Payload n√¢ng cao</summary>
                    <p>S·ª≠ d·ª•ng <code>$(command)</code> ho·∫∑c <code>`command`</code> ƒë·ªÉ th·ª±c thi l·ªánh con</p>
                    <p>V√≠ d·ª•: <code>8.8.8.8; echo "Current user: $(whoami)"</code></p>
                </details>
            </div>

            <div class="info-box" style="background: #fff3cd; border-left-color: #ffc107; margin-top: 20px;">
                <h3>‚ö†Ô∏è C√°ch ph√≤ng ch·ªëng</h3>
                <ul>
                    <li><strong>KH√îNG</strong> s·ª≠ d·ª•ng <code>exec()</code>, <code>system()</code> v·ªõi user input</li>
                    <li>S·ª≠ d·ª•ng <code>execFile()</code> thay v√¨ <code>exec()</code></li>
                    <li>Validate v√† whitelist input (ch·ªâ cho ph√©p IP/domain h·ª£p l·ªá)</li>
                    <li>S·ª≠ d·ª•ng th∆∞ vi·ªán chuy√™n d·ª•ng thay v√¨ g·ªçi command tr·ª±c ti·∫øp</li>
                </ul>
            </div>
        </main>

        <footer>
            <p>‚ö†Ô∏è ƒê√¢y l√† m√¥i tr∆∞·ªùng th·ª±c h√†nh - Command kh√¥ng ƒë∆∞·ª£c filter</p>
        </footer>
    </div>

    <script>
        const ipInput = document.getElementById('ipInput');
        const pingBtn = document.getElementById('pingBtn');
        const resultsDiv = document.getElementById('results');
        const commandDisplay = document.getElementById('commandDisplay');
        const commandText = document.getElementById('commandText');

        function performPing() {
            const ip = ipInput.value.trim();

            if (!ip) {
                resultsDiv.innerHTML = '<p class="no-results">Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ IP ho·∫∑c domain</p>';
                return;
            }

            fetch('/api/ping', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ ip: ip })
            })
                .then(res => res.json())
                .then(data => {
                    // Hi·ªÉn th·ªã command
                    commandDisplay.style.display = 'block';
                    commandText.textContent = data.command;

                    // Hi·ªÉn th·ªã k·∫øt qu·∫£
                    if (data.error) {
                        resultsDiv.innerHTML = `
                            <div class="error-box">
                                <h3>‚ùå L·ªói th·ª±c thi</h3>
                                <pre>${data.error}</pre>
                                ${data.output ? `<pre>${data.output}</pre>` : ''}
                            </div>
                        `;
                    } else if (data.output) {
                        resultsDiv.innerHTML = `
                            <h3>K·∫øt qu·∫£:</h3>
                            <div class="command-output">
                                <pre>${data.output}</pre>
                            </div>
                        `;
                    } else {
                        resultsDiv.innerHTML = '<p class="no-results">Kh√¥ng c√≥ k·∫øt qu·∫£</p>';
                    }
                })
                .catch(err => {
                    resultsDiv.innerHTML = `<div class="error-box">L·ªói: ${err.message}</div>`;
                });
        }

        pingBtn.addEventListener('click', performPing);
        ipInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') performPing();
        });
    </script>
</body>

</html>